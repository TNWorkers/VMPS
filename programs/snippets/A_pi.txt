	//--------------<A*init>---------------
	vector<SiteOperator<MODEL::Symmetry,double>> localOperators(L);
	vector<double> stag_sum(L);
	MODEL::StateXd initA;
	
	for (int l=0; l<L; ++l)
	{
		stag_sum[l]       = pow(-1.,l);
	}
	
	if (A[0].locality() > -1)
	{
		for (int l=0; l<L; ++l)
		{
			localOperators[l] = A[l].localOperator();
			
		}
		
		Mpo<MODEL::Symmetry,double> Asum(L, A[0].Qtarget(), "Asum");
		for (int l=0; l<L; ++l)
		{
			Asum.setLocBasis(A[l].locBasis(l), l);
		}
		Asum.setLocalSum(localOperators, stag_sum);
		
		OxV_exact(Asum, init->state, initA, 1e-7, DMRG::VERBOSITY::SILENT);
	}
	else
	{
		vector<MODEL::StateXd> AxPsi(L);
		
		for (int l=0; l<L; ++l)
		{
			OxV_exact(A[l], init->state, AxPsi[l], 1, DMRG::VERBOSITY::SILENT);
		}
		
		lout << termcolor::blue << "Begin lincomboCompress..." << endl;
		MODEL::CompressorXd Compadre(DMRG::VERBOSITY::HALFSWEEPWISE);
		Compadre.lincomboCompress(AxPsi, stag_sum, initA, init->state.calc_Dmax(), 1e-10);
	}
	
	delete init;
	//--------------</A*init>---------------
