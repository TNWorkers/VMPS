	//--------------<ground state>---------------
	Eigenstate<MODEL::StateXd> * init = new Eigenstate<MODEL::StateXd>;
	
	Stopwatch<> Chronos;
	stringstream ginfo, rinfo;
	
	ArrayXd Emins(Qc.size());
	ArrayXd Emaxs(Qc.size());
	
	#pragma omp parallel sections
	{
		#pragma omp section
		{
			Stopwatch<> nChronos;
			MODEL::Solver * DMRG = new MODEL::Solver(VERB1);
			DMRG->edgeState(H, *init, Qi, LANCZOS::EDGE::GROUND);
			lout << endl << nChronos.info(make_string("ground state ",Qi)) << endl;
			lout << DMRG->info() << endl;
			E0 = init->energy;
			delete DMRG;
		}
		
		#pragma omp section
		{
			for (size_t i=0; i<Qc.size(); ++i)
			{
				Stopwatch<> gChronos;
				Eigenstate<MODEL::StateXd> g;
				MODEL::Solver gDMRG(VERB2);
				gDMRG.edgeState(H, g, Qc[i], LANCZOS::EDGE::GROUND);
				ginfo << gChronos.info(make_string("ground state ",Qc[i])) << endl;
				Emins[i] = g.energy;
				ginfo << gDMRG.info() << endl;
			}
		}
		
		#pragma omp section
		{
			for (size_t i=0; i<Qc.size(); ++i)
			{
				Stopwatch<> rChronos;
				Eigenstate<MODEL::StateXd> r;
				MODEL::Solver rDMRG(VERB3);
				rDMRG.edgeState(H, r, Qc[i], LANCZOS::EDGE::ROOF);
				rinfo << rChronos.info(make_string("roof state ",Qc[i])) << endl;
				if (rDMRG.get_errState() > rDMRG.GlobParam.tol_state)
				{
					Emaxs[i] = 2.*r.energy;
					lout << termcolor::red << "Bad convergence of roof state! Doubling the energy value from " 
					     << r.energy << " to " << Emaxs[i] << " to be safe!" << termcolor::reset << endl;
				}
				else
				{
					Emaxs[i] = r.energy;
				}
				rinfo << rDMRG.info() << endl;
			}
		}
	}
	
	Emin = Emins.minCoeff();
	Emax = Emaxs.maxCoeff();
	
	lout << ginfo.str() << rinfo.str() << endl;
	lout << Chronos.info("all edge states") << endl;
	lout << "Emins=" << Emins.transpose() << endl;
	lout << "Emaxs=" << Emaxs.transpose() << endl;
	lout << termcolor::bold << "E0=" << E0 << ", Emin=" << Emin << ", Emax=" << Emax << termcolor::reset << endl << endl;
	
	// save energies
	ofstream Efile(make_string(wd+"energies/"+Efilename,".dat"));
	Efile << E0 << endl;
	Efile << Emin << endl;
	Efile << Emax << endl;
	Efile.close();
	//--------------</ground state>---------------
